#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace web_coffee.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="web")]
	public partial class DataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTai_Khoan(Tai_Khoan instance);
    partial void UpdateTai_Khoan(Tai_Khoan instance);
    partial void DeleteTai_Khoan(Tai_Khoan instance);
    partial void InsertSanPham(SanPham instance);
    partial void UpdateSanPham(SanPham instance);
    partial void DeleteSanPham(SanPham instance);
    partial void InsertDon_Hang(Don_Hang instance);
    partial void UpdateDon_Hang(Don_Hang instance);
    partial void DeleteDon_Hang(Don_Hang instance);
    partial void InsertDanh_Muc(Danh_Muc instance);
    partial void UpdateDanh_Muc(Danh_Muc instance);
    partial void DeleteDanh_Muc(Danh_Muc instance);
    partial void InsertChi_Tiet_Don_Hang(Chi_Tiet_Don_Hang instance);
    partial void UpdateChi_Tiet_Don_Hang(Chi_Tiet_Don_Hang instance);
    partial void DeleteChi_Tiet_Don_Hang(Chi_Tiet_Don_Hang instance);
    #endregion
		
		public DataDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["webConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Tai_Khoan> Tai_Khoans
		{
			get
			{
				return this.GetTable<Tai_Khoan>();
			}
		}
		
		public System.Data.Linq.Table<SanPham> SanPhams
		{
			get
			{
				return this.GetTable<SanPham>();
			}
		}
		
		public System.Data.Linq.Table<Don_Hang> Don_Hangs
		{
			get
			{
				return this.GetTable<Don_Hang>();
			}
		}
		
		public System.Data.Linq.Table<Danh_Muc> Danh_Mucs
		{
			get
			{
				return this.GetTable<Danh_Muc>();
			}
		}
		
		public System.Data.Linq.Table<Chi_Tiet_Don_Hang> Chi_Tiet_Don_Hangs
		{
			get
			{
				return this.GetTable<Chi_Tiet_Don_Hang>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tai_Khoan")]
	public partial class Tai_Khoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTK;
		
		private string _TenTK;
		
		private string _MatKhau;
		
		private string _Quyen;
		
		private string _DiaChiEmail;
		
		private string _Sodt;
		
		private EntitySet<Don_Hang> _Don_Hangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTKChanging(int value);
    partial void OnMaTKChanged();
    partial void OnTenTKChanging(string value);
    partial void OnTenTKChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnQuyenChanging(string value);
    partial void OnQuyenChanged();
    partial void OnDiaChiEmailChanging(string value);
    partial void OnDiaChiEmailChanged();
    partial void OnSodtChanging(string value);
    partial void OnSodtChanged();
    #endregion
		
		public Tai_Khoan()
		{
			this._Don_Hangs = new EntitySet<Don_Hang>(new Action<Don_Hang>(this.attach_Don_Hangs), new Action<Don_Hang>(this.detach_Don_Hangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTK", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaTK
		{
			get
			{
				return this._MaTK;
			}
			set
			{
				if ((this._MaTK != value))
				{
					this.OnMaTKChanging(value);
					this.SendPropertyChanging();
					this._MaTK = value;
					this.SendPropertyChanged("MaTK");
					this.OnMaTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTK", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenTK
		{
			get
			{
				return this._TenTK;
			}
			set
			{
				if ((this._TenTK != value))
				{
					this.OnTenTKChanging(value);
					this.SendPropertyChanging();
					this._TenTK = value;
					this.SendPropertyChanged("TenTK");
					this.OnTenTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quyen", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		public string Quyen
		{
			get
			{
				return this._Quyen;
			}
			set
			{
				if ((this._Quyen != value))
				{
					this.OnQuyenChanging(value);
					this.SendPropertyChanging();
					this._Quyen = value;
					this.SendPropertyChanged("Quyen");
					this.OnQuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiEmail", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DiaChiEmail
		{
			get
			{
				return this._DiaChiEmail;
			}
			set
			{
				if ((this._DiaChiEmail != value))
				{
					this.OnDiaChiEmailChanging(value);
					this.SendPropertyChanging();
					this._DiaChiEmail = value;
					this.SendPropertyChanged("DiaChiEmail");
					this.OnDiaChiEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sodt", DbType="NVarChar(12) NOT NULL", CanBeNull=false)]
		public string Sodt
		{
			get
			{
				return this._Sodt;
			}
			set
			{
				if ((this._Sodt != value))
				{
					this.OnSodtChanging(value);
					this.SendPropertyChanging();
					this._Sodt = value;
					this.SendPropertyChanged("Sodt");
					this.OnSodtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tai_Khoan_Don_Hang", Storage="_Don_Hangs", ThisKey="MaTK", OtherKey="MaTK")]
		public EntitySet<Don_Hang> Don_Hangs
		{
			get
			{
				return this._Don_Hangs;
			}
			set
			{
				this._Don_Hangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Don_Hangs(Don_Hang entity)
		{
			this.SendPropertyChanging();
			entity.Tai_Khoan = this;
		}
		
		private void detach_Don_Hangs(Don_Hang entity)
		{
			this.SendPropertyChanging();
			entity.Tai_Khoan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SanPham")]
	public partial class SanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaSP;
		
		private int _MaDM;
		
		private string _TenSP;
		
		private int _Gia;
		
		private string _MoTa;
		
		private string _Anh;
		
		private EntitySet<Chi_Tiet_Don_Hang> _Chi_Tiet_Don_Hangs;
		
		private EntityRef<Danh_Muc> _Danh_Muc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSPChanging(int value);
    partial void OnMaSPChanged();
    partial void OnMaDMChanging(int value);
    partial void OnMaDMChanged();
    partial void OnTenSPChanging(string value);
    partial void OnTenSPChanged();
    partial void OnGiaChanging(int value);
    partial void OnGiaChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnAnhChanging(string value);
    partial void OnAnhChanged();
    #endregion
		
		public SanPham()
		{
			this._Chi_Tiet_Don_Hangs = new EntitySet<Chi_Tiet_Don_Hang>(new Action<Chi_Tiet_Don_Hang>(this.attach_Chi_Tiet_Don_Hangs), new Action<Chi_Tiet_Don_Hang>(this.detach_Chi_Tiet_Don_Hangs));
			this._Danh_Muc = default(EntityRef<Danh_Muc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDM", DbType="Int NOT NULL")]
		public int MaDM
		{
			get
			{
				return this._MaDM;
			}
			set
			{
				if ((this._MaDM != value))
				{
					if (this._Danh_Muc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDMChanging(value);
					this.SendPropertyChanging();
					this._MaDM = value;
					this.SendPropertyChanged("MaDM");
					this.OnMaDMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSP", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenSP
		{
			get
			{
				return this._TenSP;
			}
			set
			{
				if ((this._TenSP != value))
				{
					this.OnTenSPChanging(value);
					this.SendPropertyChanging();
					this._TenSP = value;
					this.SendPropertyChanged("TenSP");
					this.OnTenSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Int NOT NULL")]
		public int Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(1000)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anh", DbType="VarChar(50)")]
		public string Anh
		{
			get
			{
				return this._Anh;
			}
			set
			{
				if ((this._Anh != value))
				{
					this.OnAnhChanging(value);
					this.SendPropertyChanging();
					this._Anh = value;
					this.SendPropertyChanged("Anh");
					this.OnAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_Chi_Tiet_Don_Hang", Storage="_Chi_Tiet_Don_Hangs", ThisKey="MaSP", OtherKey="MaSP")]
		public EntitySet<Chi_Tiet_Don_Hang> Chi_Tiet_Don_Hangs
		{
			get
			{
				return this._Chi_Tiet_Don_Hangs;
			}
			set
			{
				this._Chi_Tiet_Don_Hangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Danh_Muc_SanPham", Storage="_Danh_Muc", ThisKey="MaDM", OtherKey="MaDM", IsForeignKey=true)]
		public Danh_Muc Danh_Muc
		{
			get
			{
				return this._Danh_Muc.Entity;
			}
			set
			{
				Danh_Muc previousValue = this._Danh_Muc.Entity;
				if (((previousValue != value) 
							|| (this._Danh_Muc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Danh_Muc.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._Danh_Muc.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._MaDM = value.MaDM;
					}
					else
					{
						this._MaDM = default(int);
					}
					this.SendPropertyChanged("Danh_Muc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Chi_Tiet_Don_Hangs(Chi_Tiet_Don_Hang entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_Chi_Tiet_Don_Hangs(Chi_Tiet_Don_Hang entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Don_Hang")]
	public partial class Don_Hang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _madh;
		
		private int _MaTK;
		
		private string _HoTen;
		
		private System.DateTime _NgayBan;
		
		private string _DiaChi;
		
		private System.Nullable<double> _TongTien;
		
		private string _TinhTrang;
		
		private EntitySet<Chi_Tiet_Don_Hang> _Chi_Tiet_Don_Hangs;
		
		private EntityRef<Tai_Khoan> _Tai_Khoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmadhChanging(int value);
    partial void OnmadhChanged();
    partial void OnMaTKChanging(int value);
    partial void OnMaTKChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnNgayBanChanging(System.DateTime value);
    partial void OnNgayBanChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnTongTienChanging(System.Nullable<double> value);
    partial void OnTongTienChanged();
    partial void OnTinhTrangChanging(string value);
    partial void OnTinhTrangChanged();
    #endregion
		
		public Don_Hang()
		{
			this._Chi_Tiet_Don_Hangs = new EntitySet<Chi_Tiet_Don_Hang>(new Action<Chi_Tiet_Don_Hang>(this.attach_Chi_Tiet_Don_Hangs), new Action<Chi_Tiet_Don_Hang>(this.detach_Chi_Tiet_Don_Hangs));
			this._Tai_Khoan = default(EntityRef<Tai_Khoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_madh", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int madh
		{
			get
			{
				return this._madh;
			}
			set
			{
				if ((this._madh != value))
				{
					this.OnmadhChanging(value);
					this.SendPropertyChanging();
					this._madh = value;
					this.SendPropertyChanged("madh");
					this.OnmadhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTK", DbType="Int NOT NULL")]
		public int MaTK
		{
			get
			{
				return this._MaTK;
			}
			set
			{
				if ((this._MaTK != value))
				{
					if (this._Tai_Khoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTKChanging(value);
					this.SendPropertyChanging();
					this._MaTK = value;
					this.SendPropertyChanged("MaTK");
					this.OnMaTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBan", DbType="DateTime NOT NULL")]
		public System.DateTime NgayBan
		{
			get
			{
				return this._NgayBan;
			}
			set
			{
				if ((this._NgayBan != value))
				{
					this.OnNgayBanChanging(value);
					this.SendPropertyChanging();
					this._NgayBan = value;
					this.SendPropertyChanged("NgayBan");
					this.OnNgayBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Float")]
		public System.Nullable<double> TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="Char(50)")]
		public string TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Don_Hang_Chi_Tiet_Don_Hang", Storage="_Chi_Tiet_Don_Hangs", ThisKey="madh", OtherKey="madh")]
		public EntitySet<Chi_Tiet_Don_Hang> Chi_Tiet_Don_Hangs
		{
			get
			{
				return this._Chi_Tiet_Don_Hangs;
			}
			set
			{
				this._Chi_Tiet_Don_Hangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tai_Khoan_Don_Hang", Storage="_Tai_Khoan", ThisKey="MaTK", OtherKey="MaTK", IsForeignKey=true)]
		public Tai_Khoan Tai_Khoan
		{
			get
			{
				return this._Tai_Khoan.Entity;
			}
			set
			{
				Tai_Khoan previousValue = this._Tai_Khoan.Entity;
				if (((previousValue != value) 
							|| (this._Tai_Khoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tai_Khoan.Entity = null;
						previousValue.Don_Hangs.Remove(this);
					}
					this._Tai_Khoan.Entity = value;
					if ((value != null))
					{
						value.Don_Hangs.Add(this);
						this._MaTK = value.MaTK;
					}
					else
					{
						this._MaTK = default(int);
					}
					this.SendPropertyChanged("Tai_Khoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Chi_Tiet_Don_Hangs(Chi_Tiet_Don_Hang entity)
		{
			this.SendPropertyChanging();
			entity.Don_Hang = this;
		}
		
		private void detach_Chi_Tiet_Don_Hangs(Chi_Tiet_Don_Hang entity)
		{
			this.SendPropertyChanging();
			entity.Don_Hang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Danh_Muc")]
	public partial class Danh_Muc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDM;
		
		private string _TenDM;
		
		private EntitySet<SanPham> _SanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDMChanging(int value);
    partial void OnMaDMChanged();
    partial void OnTenDMChanging(string value);
    partial void OnTenDMChanged();
    #endregion
		
		public Danh_Muc()
		{
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDM", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDM
		{
			get
			{
				return this._MaDM;
			}
			set
			{
				if ((this._MaDM != value))
				{
					this.OnMaDMChanging(value);
					this.SendPropertyChanging();
					this._MaDM = value;
					this.SendPropertyChanged("MaDM");
					this.OnMaDMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDM", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenDM
		{
			get
			{
				return this._TenDM;
			}
			set
			{
				if ((this._TenDM != value))
				{
					this.OnTenDMChanging(value);
					this.SendPropertyChanging();
					this._TenDM = value;
					this.SendPropertyChanged("TenDM");
					this.OnTenDMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Danh_Muc_SanPham", Storage="_SanPhams", ThisKey="MaDM", OtherKey="MaDM")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.Danh_Muc = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.Danh_Muc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Chi_Tiet_Don_Hang")]
	public partial class Chi_Tiet_Don_Hang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaSP;
		
		private int _madh;
		
		private System.Nullable<int> _SoLuong;
		
		private EntityRef<Don_Hang> _Don_Hang;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSPChanging(int value);
    partial void OnMaSPChanged();
    partial void OnmadhChanging(int value);
    partial void OnmadhChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    #endregion
		
		public Chi_Tiet_Don_Hang()
		{
			this._Don_Hang = default(EntityRef<Don_Hang>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_madh", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int madh
		{
			get
			{
				return this._madh;
			}
			set
			{
				if ((this._madh != value))
				{
					if (this._Don_Hang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmadhChanging(value);
					this.SendPropertyChanging();
					this._madh = value;
					this.SendPropertyChanged("madh");
					this.OnmadhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Don_Hang_Chi_Tiet_Don_Hang", Storage="_Don_Hang", ThisKey="madh", OtherKey="madh", IsForeignKey=true)]
		public Don_Hang Don_Hang
		{
			get
			{
				return this._Don_Hang.Entity;
			}
			set
			{
				Don_Hang previousValue = this._Don_Hang.Entity;
				if (((previousValue != value) 
							|| (this._Don_Hang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Don_Hang.Entity = null;
						previousValue.Chi_Tiet_Don_Hangs.Remove(this);
					}
					this._Don_Hang.Entity = value;
					if ((value != null))
					{
						value.Chi_Tiet_Don_Hangs.Add(this);
						this._madh = value.madh;
					}
					else
					{
						this._madh = default(int);
					}
					this.SendPropertyChanged("Don_Hang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_Chi_Tiet_Don_Hang", Storage="_SanPham", ThisKey="MaSP", OtherKey="MaSP", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.Chi_Tiet_Don_Hangs.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.Chi_Tiet_Don_Hangs.Add(this);
						this._MaSP = value.MaSP;
					}
					else
					{
						this._MaSP = default(int);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
